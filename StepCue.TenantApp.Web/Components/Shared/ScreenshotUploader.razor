@using Microsoft.AspNetCore.Components.Forms
@using StepCue.TenantApp.Web.Services
@inject FileService FileService

<div class="mud-input mud-input-outlined mud-shrink">
    <InputFile id="fileInput" OnChange="OnFileSelected" hidden accept=".jpg,.jpeg,.png" />
    
    @if (ImageData != null && ImageData.Length > 0)
    {

    }
    else
    {
      @*   <MudPaper Height="200px" Width="100%" Outlined="true" Class="d-flex flex-column align-center justify-center">
            <MudIcon Icon="@Icons.Material.Filled.Image" Size="Size.Large" Class="mb-2" />
            <MudText Typo="Typo.body1">No screenshot uploaded</MudText>
            <MudButton Variant="Variant.Outlined" 
                      Color="Color.Primary" 
                      OnClick="@(() => BrowseFiles())"
                      Class="mt-3">
                Upload Screenshot
            </MudButton>
        </MudPaper> *@
    }
</div>

@code {
    [Parameter]
    public byte[] ImageData { get; set; }
    
    [Parameter]
    public EventCallback<byte[]> ImageDataChanged { get; set; }
    
    private async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var imageData = await FileService.ProcessScreenshotAsync(file);
            ImageData = imageData;
            await ImageDataChanged.InvokeAsync(imageData);
        }
    }
    
    // private void BrowseFiles()
    // {
    //     // Programmatically click the hidden input file element
    //     var element = document.getElementById("fileInput");
    //     element.click();
    // }
    
    private async Task ClearImage()
    {
        ImageData = null;
        await ImageDataChanged.InvokeAsync(null);
    }
    
    [Inject]
    private IJSRuntime JSRuntime { get; set; }
    
    private IJSObjectReference document;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            document = await JSRuntime.InvokeAsync<IJSObjectReference>("eval", "document");
        }
    }
}